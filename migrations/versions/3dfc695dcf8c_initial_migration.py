"""Initial migration

Revision ID: 3dfc695dcf8c
Revises: 
Create Date: 2025-09-01 15:21:53.560821

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3dfc695dcf8c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dental_charting')
    op.drop_table('dental_chart_teeth')
    op.drop_table('chart_legend')
    op.drop_table('account_activity')
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('accounts_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'employees', ['employee_id'], ['employee_id'])

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.alter_column('patient_id',
               existing_type=mysql.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('appointment_time',
               existing_type=mysql.TIME(),
               nullable=False)
        batch_op.alter_column('appointment_type',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('appointment_category',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('appointment_status',
               existing_type=mysql.ENUM('pending', 'approved', 'cancelled'),
               nullable=False,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('request_date',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('returning_patient',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('appointments_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'branch', ['branch_id'], ['branch_id'])

    with op.batch_alter_table('archive', schema=None) as batch_op:
        batch_op.alter_column('original_id',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('idx_original_id'))
        batch_op.drop_index(batch_op.f('idx_table_name'))

    with op.batch_alter_table('dental_record', schema=None) as batch_op:
        batch_op.alter_column('patient_id',
               existing_type=mysql.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('dental_record_image_link',
               existing_type=mysql.TEXT(),
               nullable=False)
        batch_op.create_foreign_key(None, 'patient_info', ['patient_id'], ['patient_id'])

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('middle_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('sex',
               existing_type=mysql.ENUM('f', 'm'),
               type_=sa.String(length=1),
               existing_nullable=False)
        batch_op.alter_column('employment_status',
               existing_type=mysql.ENUM('active', 'inactive'),
               nullable=False,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('position',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('department',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('shift_days',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('shift_hours',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)

    with op.batch_alter_table('inventory_consumables', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('fk_consumables_item'), type_='foreignkey')

    with op.batch_alter_table('inventory_equipments', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('equipment_condition',
               existing_type=mysql.VARCHAR(length=100),
               comment=None,
               existing_comment='damaged, working, etc.',
               existing_nullable=True)

    with op.batch_alter_table('inventory_items', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('category',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('item_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=mysql.FLOAT(),
               nullable=False)
        batch_op.alter_column('quantity_unit',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False,
               comment=None,
               existing_comment='ml, pcs, box, etc.')
        batch_op.alter_column('cost_per_unit',
               existing_type=mysql.FLOAT(),
               nullable=False)
        batch_op.alter_column('total_value',
               existing_type=mysql.FLOAT(),
               nullable=False)
        batch_op.drop_index(batch_op.f('fk_inventory_category'))

    with op.batch_alter_table('inventory_lab_materials', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('inventory_medications', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('inventory_restock', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('restock_date',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('quantity_added',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('inventory_restock_ibfk_2'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('inventory_restock_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'inventory_items', ['item_id'], ['item_id'])
        batch_op.drop_column('restock_id')

    with op.batch_alter_table('inventory_sterilization', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=mysql.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('inventory_usage', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('quantity_used',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('id'))
        batch_op.drop_constraint(batch_op.f('fk_procedure_history'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_inventory_items'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'procedure_history', ['procedure_id'], ['procedure_id'])
        batch_op.create_foreign_key(None, 'inventory_items', ['inventory_item_id'], ['item_id'])

    with op.batch_alter_table('main_website', schema=None) as batch_op:
        batch_op.alter_column('main_website',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('clinic_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('main_email',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('main_contact_number',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=20),
               nullable=False)

    with op.batch_alter_table('patient_info', schema=None) as batch_op:
        batch_op.alter_column('patient_id',
               existing_type=mysql.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('middle_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('sex',
               existing_type=mysql.CHAR(length=1),
               type_=sa.String(length=1),
               existing_nullable=False)
        batch_op.alter_column('country',
               existing_type=mysql.VARCHAR(length=60),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('branch_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('patient_info_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'branch', ['branch_id'], ['branch_id'])

    with op.batch_alter_table('patient_medical_info', schema=None) as batch_op:
        batch_op.alter_column('patient_id',
               existing_type=mysql.VARCHAR(length=8),
               type_=sa.Integer(),
               existing_nullable=False)

    with op.batch_alter_table('procedure_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('procedure_date', sa.Date(), nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_procedure_appointment'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('procedure_history_appointment_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_procedure_history_appointment'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'appointments', ['appointment_id'], ['appointment_id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.drop_column('Procedure_date')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('procedure_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('transactions_ibfk_1'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_transactions_procedure'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'procedure_history', ['procedure_id'], ['procedure_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_transactions_procedure'), 'procedure_history', ['procedure_id'], ['procedure_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('transactions_ibfk_1'), 'procedure_history', ['procedure_id'], ['procedure_id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.alter_column('procedure_id',
               existing_type=mysql.INTEGER(),
               nullable=True)

    with op.batch_alter_table('procedure_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Procedure_date', sa.DATE(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_procedure_history_appointment'), 'appointments', ['appointment_id'], ['appointment_id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('procedure_history_appointment_id_fkey'), 'appointments', ['appointment_id'], ['appointment_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_procedure_appointment'), 'appointments', ['appointment_id'], ['appointment_id'], ondelete='SET NULL')
        batch_op.drop_column('procedure_date')

    with op.batch_alter_table('patient_medical_info', schema=None) as batch_op:
        batch_op.alter_column('patient_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=8),
               existing_nullable=False)

    with op.batch_alter_table('patient_info', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('patient_info_ibfk_1'), 'branch', ['branch_id'], ['branch_id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('branch_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('country',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=60),
               existing_nullable=False)
        batch_op.alter_column('sex',
               existing_type=sa.String(length=1),
               type_=mysql.CHAR(length=1),
               existing_nullable=False)
        batch_op.alter_column('middle_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('patient_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=8),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('main_website', schema=None) as batch_op:
        batch_op.alter_column('main_contact_number',
               existing_type=sa.String(length=20),
               type_=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('main_email',
               existing_type=sa.String(length=100),
               type_=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('clinic_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('main_website',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('inventory_usage', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_inventory_items'), 'inventory_items', ['inventory_item_id'], ['item_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_procedure_history'), 'procedure_history', ['procedure_id'], ['procedure_id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('id'), ['id'], unique=True)
        batch_op.alter_column('quantity_used',
               existing_type=sa.Float(),
               type_=mysql.DECIMAL(precision=10, scale=2),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(unsigned=True),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('inventory_sterilization', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('inventory_restock', schema=None) as batch_op:
        batch_op.add_column(sa.Column('restock_id', mysql.INTEGER(), autoincrement=True, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('inventory_restock_ibfk_1'), 'inventory_items', ['item_id'], ['item_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('inventory_restock_ibfk_2'), 'branch', ['branch_id'], ['branch_id'], ondelete='CASCADE')
        batch_op.alter_column('quantity_added',
               existing_type=sa.Float(),
               type_=mysql.DECIMAL(precision=10, scale=2),
               existing_nullable=False)
        batch_op.alter_column('restock_date',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.drop_column('id')

    with op.batch_alter_table('inventory_medications', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('inventory_lab_materials', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('inventory_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('fk_inventory_category'), ['category'], unique=False)
        batch_op.alter_column('total_value',
               existing_type=mysql.FLOAT(),
               nullable=True)
        batch_op.alter_column('cost_per_unit',
               existing_type=mysql.FLOAT(),
               nullable=True)
        batch_op.alter_column('quantity_unit',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True,
               comment='ml, pcs, box, etc.')
        batch_op.alter_column('quantity',
               existing_type=mysql.FLOAT(),
               nullable=True)
        batch_op.alter_column('item_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('category',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('inventory_equipments', schema=None) as batch_op:
        batch_op.alter_column('equipment_condition',
               existing_type=mysql.VARCHAR(length=100),
               comment='damaged, working, etc.',
               existing_nullable=True)
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('inventory_consumables', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('fk_consumables_item'), 'inventory_items', ['item_id'], ['item_id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('shift_hours',
               existing_type=sa.String(length=255),
               type_=mysql.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('shift_days',
               existing_type=sa.String(length=255),
               type_=mysql.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('department',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('position',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('employment_status',
               existing_type=mysql.ENUM('active', 'inactive'),
               nullable=True,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('sex',
               existing_type=sa.String(length=1),
               type_=mysql.ENUM('f', 'm'),
               existing_nullable=False)
        batch_op.alter_column('middle_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('dental_record', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('dental_record_image_link',
               existing_type=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('patient_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=8),
               existing_nullable=False)

    with op.batch_alter_table('archive', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_table_name'), ['table_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_original_id'), ['original_id'], unique=False)
        batch_op.alter_column('original_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('appointments_ibfk_1'), 'branch', ['branch_id'], ['branch_id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('returning_patient',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
        batch_op.alter_column('request_date',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('appointment_status',
               existing_type=mysql.ENUM('pending', 'approved', 'cancelled'),
               nullable=True,
               existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('appointment_category',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('appointment_type',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('appointment_time',
               existing_type=mysql.TIME(),
               nullable=True)
        batch_op.alter_column('patient_id',
               existing_type=sa.Integer(),
               type_=mysql.VARCHAR(length=8),
               existing_nullable=False)

    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('accounts_ibfk_1'), 'employees', ['employee_id'], ['employee_id'], onupdate='CASCADE', ondelete='CASCADE')

    op.create_table('account_activity',
    sa.Column('activity_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('account_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('date_and_time', mysql.DATETIME(), nullable=False),
    sa.Column('module', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('target', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('details', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.account_id'], name=op.f('account_activity_ibfk_1')),
    sa.PrimaryKeyConstraint('activity_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('chart_legend',
    sa.Column('condition_code', mysql.VARCHAR(length=10), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('condition_code'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('dental_chart_teeth',
    sa.Column('teeth_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dental_chart_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tooth_number', mysql.VARCHAR(length=10), nullable=False),
    sa.Column('teeth_condition', mysql.ENUM('D', 'M', 'F', 'I', 'RF', 'MO', 'Im', 'J', 'A', 'AB', 'P', 'In', 'Fx', 'S', 'Rm', 'X', 'XO', '/', 'Cm', 'Sp', ''), server_default=sa.text("''"), nullable=True),
    sa.Column('notes', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['dental_chart_id'], ['dental_charting.dental_chart_id'], name=op.f('dental_chart_teeth_ibfk_1'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teeth_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('dental_charting',
    sa.Column('dental_chart_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dental_record_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_taken', sa.DATE(), nullable=False),
    sa.Column('chart_notes', mysql.TEXT(), nullable=True),
    sa.Column('dental_chart_image_link', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['dental_record_id'], ['dental_record.dental_record_id'], name=op.f('dental_charting_ibfk_1'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dental_chart_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
